<div class="container-fluid content-inner mt-n5 py-0">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="container text-center">
                    <h4 class="text-responsive mb-3 mt-3">Solicitudes de Cambio</h4>
                    <div class="row justify-content-center gx-2" 
                    <<% if (role !== 'admin' && role !== 'super-admin') { %> style="display: none;" <% } %> 

                    <!-- Botón Nuevo -->
                    <div class="col-auto">
                        <button type="button" class="btn btn-primary rounded-pill w-auto"
                            data-bs-toggle="modal" data-bs-target="#nuevoRegistroModal" data-action="nuevo"
                            style="padding: 4px 12px; font-size: 12px;" class="btn-sm">
                            Nuevo
                        </button>
                    </div>
                
                    <!-- Botón Activar Edición -->
                    <div class="col-auto">
                        <button id="toggleEditMode" class="btn btn-primary rounded-pill w-auto"
                            style="padding: 4px 12px; font-size: 12px;">
                            <i class="fas fa-edit me-1"></i> Activar Edición
                        </button>
                    </div>
                
               
               
                </div>
                
                    
                </div>
                <div class="card-body">
                    <div class="test-container">
                        <div class="test-header d-flex align-items-center">
                            <!-- Radio para 'Todos' -->
                            <div class="form-check form-check-inline">
                                <input type="radio" class="form-check-input" name="filter" id="all" onchange="externalFilterChanged('all')" checked>
                                <label for="all" class="form-check-label pl-2">Todos</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input type="radio" class="form-check-input" name="filter" id="cctsSaleEntra" onchange="externalFilterChanged('cctsSaleEntra')">
                                <label for="cctsSaleEntra" class="form-check-label pl-2">CCTs sale y entra</label>
                            </div>
                            <% if (role === 'admin' || role === 'super-admin') { %>
                                <div class="form-check form-check-inline">
                                    <input type="radio" class="form-check-input" name="filter" id="funcionDelete" onchange="externalFilterChanged('funcionDelete')">
                                    <label for="funcionDelete" class="form-check-label pl-2">Borrar entradas</label>
                                </div>
                            <% } %>
                            
                            
                        </div>
                        <div id="myGrid" class="ag-theme-quartz" style="width: 100%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    <!--Crear-->
<div class="modal fade" id="nuevoRegistroModal"  tabindex="-1" aria-labelledby="nuevoRegistroModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <!-- Se usa modal-xl para más espacio -->
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="nuevoRegistroModalLabel">
                        Nueva entrada
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- Columna derecha para el formulario -->
                        <div class="col-12">
                            <div class="card">
                                <div class="card-body">
                                    <form id="formRegistro" action="/guardarRegistro" method="POST" class="small">
                                        <input type="hidden" name="tabla" value="solicitudes_de_cambio" />
                                        <div class="row">
                                            <!-- Personal ID y Nombre del Docente -->
                                            <div class="row">
                                                <div class="form-group col-md-2">
                                                    <label for="personal_id" class="form-label">ID:</label>
                                                    <input type="text" class="form-control" id="personal_id"
                                                        name="personal_id" placeholder="" autocomplete="off" />
                                                </div>
                                                <div class="form-group col-md-10">
                                                    <label for="nombre_docente" class="form-label">Nombre del
                                                        personal:</label>
                                                    <input type="text" class="form-control" id="nombre_docente"
                                                        name="nombre_docente" placeholder="Escriba un nombre"
                                                        autocomplete="off" />
                                                    <ul id="suggestionsList" class="list-group position-absolute w-100"
                                                        style="z-index: 1000"></ul>
                                                </div>
                                            </div>

                                            <!-- Fecha, Antigüedad y Teléfono -->
                                            <div class="form-group col-sm-6 col-md-6 col-lg-6">
                                                <label for="fecha" class="form-label">Fecha:</label>
                                                <input type="date" class="form-control" id="fecha" name="fecha" />
                                            </div>
                                            <!-- Estatus-->
                                            <div class="form-group col-md-6">
                                                <label for="estatus" class="form-label">Estatus:</label>
                                                <select class="form-select form-select-sm" id="estatus" name="estatus">
                                                    <option value="" selected disabled>
                                                        Selecciona una opción
                                                    </option>
                                                    <option value="Atendido">Atendido</option>
                                                    <option value="En proceso">En proceso</option>
                                                    <option value="Sin atender">Sin atender</option>
                                                </select>
                                            </div>

                                            <div class="form-group col-12">
                                                <label for="antiguedad" class="form-label">Antigüedad:</label>
                                                <input type="text" class="form-control" id="antiguedad"
                                                    name="antiguedad" placeholder="" />
                                            </div>

                                            <!-- Sección de CCT Sale -->
                                            <div class="div">
                                                <h2 class="h6 mb-2 mt-2">CCT Sale</h2>
                                            </div>
                                            <hr class="hr-horizontal mb-4" />
                                            <div class="form-group col-md-4">
                                                <label for="municipio_sale" class="form-label">Municipio:</label>
                                                <input type="text" class="form-control" id="municipio_sale"
                                                    placeholder="" readonly />
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="comunidad_sale" class="form-label">Comunidad:</label>
                                                <input type="text" class="form-control" id="comunidad_sale"
                                                    placeholder="" readonly />
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="cct_sale" class="form-label">Clave CCT:</label>
                                                <input type="text" class="form-control" id="cct_sale"
                                                    placeholder="Clave CCT" readonly />
                                            </div>

                                            <div class="div">
                                                <h2 class="h6 mb-2 mt-1">CCT Entra</h2>
                                            </div>
                                            <hr class="hr-horizontal mb-4" />
                                            <!-- Sección de CCT Entra -->
                                            <div class="form-group col-md-4">
                                                <label for="municipio_entra" class="form-label">Municipio:</label>
                                                <select class="form-select" id="municipio_entra" name="municipio_entra">
                                                    <option value="" selected disabled>
                                                        Seleccione Municipio
                                                    </option>
                                                    <!-- Opciones dinámicas -->
                                                </select>
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="comunidad_entra" class="form-label">Comunidad:</label>
                                                <select class="form-select" id="comunidad_entra" name="comunidad_entra">
                                                    <option value="" selected disabled>
                                                        Seleccione Comunidad
                                                    </option>
                                                    <!-- Opciones dinámicas -->
                                                </select>
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="cct_entra" class="form-label">Clave CCT:</label>
                                                <select class="form-select" id="cct_entra" name="cct_entra">
                                                    <option value="" selected disabled>
                                                        Seleccione Clave CCT
                                                    </option>
                                                    <!-- Opciones dinámicas -->
                                                </select>
                                            </div>

                                            <!-- Observaciones -->
                                            <div class="form-group col-md-12">
                                                <label for="observaciones" class="form-label">Observaciones:</label>
                                                <textarea class="form-control" id="observaciones" name="observaciones"
                                                    placeholder="Escriba observaciones aquí"></textarea>
                                            </div>
                                        </div>
                                        <button type="button" id="btnMostrarConfirmacion" class="btn btn-primary mt-3">
                                            Guardar
                                        </button>
                                    </form>

                                    <div id="seccionConfirmacion" class="mt-4" style="display: none">
                                        <h5>Confirmar Datos Ingresados</h5>
                                        <div class="card">
                                            <div class="card-body">
                                                <!-- Aquí mostraremos el resumen de los datos -->
                                                <div id="resumenDatos"></div>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-end mt-3">
                                            <button type="button" id="btnEditar" class="btn btn-secondary me-2">
                                                Editar
                                            </button>
                                            <button type="button" id="btnConfirmar" class="btn btn-success">
                                                Confirmar
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>

<script type="module">
    import { getStatusClass,statusRenderer,  funcionPost, borrarColumna, editarCelda, createValidatedValueSetter, createSelectColumnProps, } from "./js/AgGrid/config.js";
    import {fetchMunicipios,fetchComunidades,fetchCCTs,} from "./js/AgGrid/cargaDatos.js";
    import * as Columnas from "./js/AgGrid/columNames.js";

    let gridApi;
    let editMode = false;
   
    const estatusValidValues = ["Atendido", "En proceso", "Sin atender"];
    const SituacionValidValues = ["A disposicion", "Inseguridad", "Salud", "Sin CT"];
    const EstatusCubiertaValidValues = ["Cubierta", "Sin cubrir", "No se justifica"];


    const datos = [
   
    Columnas.Perfil,
    { field: "np", headerName: "NP", width: 70, editable: false },
    {...Columnas.colFecha(), editable: () => editMode,},
    Columnas.nombreDocente(),
    Columnas.antiguedad(),
    {field: "estatus",headerName: "Estatus", editable: () => editMode, width: 120,
    ...createSelectColumnProps(estatusValidValues),},
     { ...Columnas.observaciones(), editable: () => editMode, },
     Columnas.municipioSale(),
     Columnas.comunidadSale(),
     Columnas.cctSale(),
    {...Columnas.municipioEntra(true), editable: () => editMode,},
    {...Columnas.comunidadEntra(true),editable: () => editMode,},
    {...Columnas.cctEntra(true),editable: () => editMode,},
    borrarColumna('/api/deleteRecord')
]


        
        const gridOptions = {
            columnDefs: datos,
            defaultColDef: {editable: true,resizable: true,},
            rowData: [],
            pagination: true,
            paginationPageSize: 20,
            cacheBlockSize: 10,
            rowHeight: 60,
            domLayout: "autoHeight",
            context: {
            endpoint: "/editarSolicitudesDeCambio", // Funcion post
            municipios: [], // Lista de municipios
            comunidades: [], // Lista global de comunidades
            ccts: [], // Lista global de CCTs
            currentComunidades: [], // Para "sale"
            currentCCTs: [], // Para "sale"
            currentComunidadesEntra: [], // Nueva clave para "entra"
            currentCCTsEntra: [], // Nueva clave para "entra"
            },
           
            onCellValueChanged: editarCelda,
        };

        const columnVisibilityConfig = {
            cctsSaleEntra: [
            "np",
                "nombre_docente",
                "fecha",
                "estatus",
                "municipio_sale",
                "cct_sale",
                "estatus_cubierta",
                "municipio_entra",
                "cct_entra",
            ],
            funcionDelete: [
            "Accion",
            "np",
                "nombre_docente",
                "fecha",
                "estatus",
                "situacion",
                "antiguedad",
                "municipio_sale",
                "comunidad_sale",
                "cct_sale",
                "estatus_cubierta",
                "observaciones",
                "municipio_entra",
                "comunidad_entra",
                "cct_entra",

            ],
            all: [
            
                "np",
                "nombre_docente",
                "fecha",
                "estatus",
                "situacion",
                "antiguedad",
                "municipio_sale",
                "comunidad_sale",
                "cct_sale",
                "estatus_cubierta",
                "observaciones",
                "municipio_entra",
                "comunidad_entra",
                "cct_entra",
            ],
        };
        
        window.externalFilterChanged = function (filterType) {
            if (!gridApi) {
                console.error("Grid API no está inicializado.");
                return;
            }
        
            if (filterType in columnVisibilityConfig) {
                const columnsToShow = columnVisibilityConfig[filterType];
        
                if (columnsToShow) {
                    const allColumns = gridOptions.columnDefs.map((colDef) =>
                        colDef.field ? colDef.field : null
                    );
        
                    const columnsToHide = allColumns.filter(
                        (col) => col && !columnsToShow.includes(col)
                    );
        
                    columnsToHide.forEach((col) => gridApi.setColumnVisible(col, false));
                    columnsToShow.forEach((col) => gridApi.setColumnVisible(col, true));
                } else {
                    gridOptions.columnDefs.forEach((colDef) => {
                        gridApi.setColumnVisible(colDef.field, true);
                    });
                }
            } else {
                console.warn(`Tipo de filtro desconocido: ${filterType}`);
            }
        };
        
        

        const initializeGrid = async () => {
            const gridDiv = document.querySelector("#myGrid");
            gridApi = agGrid.createGrid(gridDiv, gridOptions);
        
            try {
                const municipios = await fetchMunicipios();
                for (const municipio of municipios) {
                    municipio.comunidades = await fetchComunidades(municipio.municipio_id);
                }
                gridOptions.context.municipios = municipios;
        
                // Obtén los datos desde el backend
                const data = await fetch("/getSolicitudesDeCambio").then((response) =>
                    response.json()
                );
        
                // Agrega el campo `tabla` dinámicamente
                const rowData = data.map((row) => ({
                    ...row,
                    tabla: "solicitudes_de_cambio", // Nombre de la tabla a la que pertenece esta fila
                }));
        
                // Establece los datos en la tabla
                gridApi.setGridOption("rowData", rowData);
        
                // Aplica el filtro inicial (opcional)
                externalFilterChanged("all");
            } catch (error) {
                console.error("Error inicializando la tabla:", error);
            }
        };
        
        // Alternar el modo edición
        document.querySelector("#toggleEditMode").addEventListener("click", async () => {
            if (editMode) {
                if (confirm("¿Estás seguro de los cambios?")) {
                    editMode = false;
                    const button = document.querySelector("#toggleEditMode");
                    button.innerHTML = '<i class="fas fa-edit me-2"></i>Activar Edición';
                    gridApi.refreshCells({ force: true }); // Refrescar las celdas
        
                    // Recargar datos desde el servidor
                    await reloadData();
                }
            } else {
                editMode = true;
                const button = document.querySelector("#toggleEditMode");
                button.innerHTML = '<i class="fas fa-times me-2"></i>Finalizar Edición';
                gridApi.refreshCells({ force: true }); // Refrescar las celdas para aplicar edición
            }
        });

        document.addEventListener("DOMContentLoaded", initializeGrid);
</script>